@charset "utf-8";
/* ===================================================================
CSS information

file name  : _settings.scss
author     : munika-works
style info : 汎用設定
=================================================================== */
//@import "compass";
$experimental-support-for-svg: true;

//----------------------------------------------//
//  Media Queries								//
//----------------------------------------------//
$bp_tab: 1199px; //tab
$bp_sp: 767px; //sp

@mixin mq($device, $val: null, $val2: null) {
	@if $device ==pc {

		//pc
		@media only screen and (min-width: ($bp_tab + 1)) {
			@content;
		}

		@media print {
			@content;
		}
	}

	@else if $device ==pc_s {

		//pc_s
		@media only screen and (min-width: ($bp_tab + 1)) and (max-width: calc((($bp_tab + 1) + (1920 - ($bp_tab + 1))) / 2)) {
			@content;
		}
	}

	@else if $device ==pc_l {

		//pc_l
		@media only screen and (min-width: calc((($bp_tab + 1) + (1920 - ($bp_tab + 1))) / 2 + 1)) {
			@content;
		}

		@media print {
			@content;
		}
	}

	@else if $device ==tab {

		//tab
		@media only screen and (min-width: ($bp_sp + 1)) and (max-width: $bp_tab) {
			@content;
		}
	}

	@else if $device ==tab_l {

		//tab_l
		@media only screen and (min-width: (calc(($bp_tab - $bp_sp) / 2) + $bp_sp + 1)) and (max-width: $bp_tab) {
			@content;
		}
	}

	@else if $device ==tab_s {

		//tab_s
		@media only screen and (min-width: ($bp_sp + 1)) and (max-width: calc(($bp_tab - $bp_sp) / 2 + $bp_sp)) {
			@content;
		}
	}

	@else if $device ==sp {

		//sp
		@media only screen and (max-width: $bp_sp) {
			@content;
		}
	}

	@else if $device ==sp_l {

		//sp_l
		@media only screen and (min-width: (calc(($bp_sp - 320) / 2) + 320 + 1)) and (max-width: $bp_sp) {
			@content;
		}
	}

	@else if $device ==sp_s {

		//sp_s
		@media only screen and (max-width: (calc(($bp_sp - 320) / 2)+ 320)) {
			@content;
		}
	}

	@else if $device ==pc_tab {

		//pc & tab
		@media only screen and (min-width: ($bp_sp + 1)) {
			@content;
		}
	}

	@else if $device ==tab_sp {

		//tab & sp
		@media only screen and (max-width: $bp_tab) {
			@content;
		}
	}

	@else if $device ==min_w {

		//max-width
		@media only screen and (min-width: $val) {
			@content;
		}
	}

	@else if $device ==max_w {

		//min-width
		@media only screen and (max-width: $val) {
			@content;
		}
	}

	@else if $device ==min_max_w {

		//min-width ~ max-width
		@media only screen and (min-width: $val) and (max-width: $val2) {
			@content;
		}
	}

	@else if $device ==min_h {

		//max-height
		@media only screen and (min-height: $val) {
			@content;
		}
	}

	@else if $device ==max_h {

		//min-height
		@media only screen and (max-height: $val) {
			@content;
		}
	}

	@else if $device ==min_max_h {

		//min-height ~ max-height
		@media only screen and (min-height: $val) and (max-height: $val2) {
			@content;
		}
	}
}

//----------------------------------------------//
//  Variable									//
//----------------------------------------------//

// メインカラム
$columnWidth: 1200;

// フォントのベースサイズ
$baseSize: 16;

//スマホのフォントベースサイズ
$baseSizeSp: 12;

// フォントのベーカラー
$baseColor: #333333;
$light-baseColor: #494949;
$white: #fff;
$gray: #F9F9F9;
$dark-gray: #7c7c7c;
$pink: #EE8A8A;
$light-pink: #FFDCDC;
$blue: #0E6BB0;
$sky-blue: #7BB5DF;
$light-blue: #D0E3F1;
$yellow: #FEFBE7;
$light-yellow: #FDFBEF;
$cream:#FFFEFB;
$bright-yellow: #F0B967;
$green: #A5DA92;


//----------------------------------------------//
//  Function									//
//----------------------------------------------//
// %計算
@function wCon($width, $parentWidth: $columnWidth) {
	@return calc($width / $parentWidth) * 100%;
}

//----------------------------------------------//
//  Placeholder									//
//----------------------------------------------//

// コンテンツ幅 - baceWidth
%bw {
	width: 90%;
	max-width: $columnWidth + px;
	margin: auto;

	@include mq(tab_sp) {
		width: calc(880 / 960) * 100%;
	}
}

%bw_l {
	width: 90%;
	margin: auto;

	@include mq(pc) {
		padding: 0 50px;
	}

	@include mq(tab_sp) {
		width: calc(880 / 960) * 100%;
	}
}

// クリアフィックス - clearFix
%cf {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

//----------------------------------------------//
//  mixin										//
//----------------------------------------------//

// フォントサイズ
// @include fsz(任意のサイズ,親要素のサイズ); ※px不要
@mixin fsz($size: $baseSize, $parent: null) {
	$i: $size * calc(100 / $baseSize);

	@if $parent ==null {
		font-size: ceil($i * 1%);
	}

	@else {
		font-size: ceil(100% * calc($size / $parent));
	}
}

//フォントサイズ設定
@mixin fsz-cha($pc_fsz: 30, $tab_fsz: 30, $sp_fsz: 17) {
	@include fsz($pc_fsz);

	@include mq(tab) {
		@include fsz($tab_fsz);
	}

	@include mq(sp) {
		@include fsz($sp_fsz);
	}
}

// 値を振り分け - choiceValue
// @include cV(プロパティ,pc幅,tab~sp幅); or @include cV(プロパティ,pc幅,tab幅,sp幅);
@mixin cV($pro, $v1: 0, $v2: 0, $v3: null) {
	#{$pro}: $v1;

	@if $v3 ==null {
		@include mq(sp) {
			#{$pro}: $v2;
		}
	}

	@else {
		@include mq(tab) {
			#{$pro}: $v2;
		}

		@include mq(sp) {
			#{$pro}: $v3;
		}
	}
}

// ホバー
// @include hover {
//		style
// }
//@include hover-color("pink");で呼び出し
@mixin hover-color($color: "white") {

	.mouse &:hover,
	.touch &.touchstart {
		@content;
	}

	@if $color =="white" {
		&:hover {
			color: $white;
			transition: .3s;
		}
	}

	@else if $color =="pink" {
		&:hover {
			color: $pink;
			transition: .3s;
		}
	}
	@else if $color =="blue" {
		&:hover {
			color: $blue;
			transition: .3s;
		}
	}
}

// 画像を拡大
// @include zoomImg(拡大率,x軸基点);
@mixin zoomImg($mag: 140%, $cri: center) {
	overflow: hidden;

	img {
		position: relative;
		width: $mag;
		max-width: none;

		@if $cri ==center {
			margin-left: -($mag - 100) / 2;
		}

		@if $cri ==right {
			margin-left: -($mag - 100);
		}
	}
}

// リンクの下線を逆にする
// @include reverseDecoration;
@mixin reverseDecoration {
	text-decoration: none !important;

	@include hover {
		text-decoration: underline !important;
	}
}

//フォント
@mixin sans-serif($type: "jp") {
	@if $type =="jp" {
		font-family: "Noto Sans JP", "メイリオ", "Meiryo", "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "游ゴシック体", "Yu Gothic",
			YuGothic, "MS Ｐゴシック", "MS PGothic", "Lucida Sans Unicode", "Lucida Grande", Verdana, Arial, sans-serif;
		font-weight: 400;
	}

	@else if $type =="title_jp" {
		font-family: "Zen Maru Gothic", "Noto Sans JP", "メイリオ", "Meiryo", "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "游ゴシック体", "Yu Gothic",
			YuGothic, "MS Ｐゴシック", "MS PGothic", "Lucida Sans Unicode", "Lucida Grande", Verdana, Arial, sans-serif;
		font-weight: 500;
	}

	@else if $type =="en" {
		font-family: "Josefin Sans", "Times New Roman", Times, Garamond, Georgia, sans-serif;
		font-weight: 400;
	}
}

@mixin serif($type: "jp") {
	@if $type =="jp" {
		font-family: "游明朝", "Yu Mincho", "YuMincho", "ヒラギノ明朝 Pro W3", "Hiragino Mincho Pro", "HGS明朝E",
			"ＭＳ Ｐ明朝", "MS PMincho", "Times New Roman", Times, Garamond, Georgia, serif;
	}

	@else if $type =="en" {
		font-family: "Times New Roman", Times, Garamond, Georgia, serif;
	}
}

// テキスト省略
@mixin text_abr($line: "2", $line-height: "1.5") {
	@if $line =="1" {
		width: 100%;
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	@else {
		overflow: hidden;
		display: -webkit-box;
		-webkit-box-orient: vertical;
		-webkit-line-clamp: $line;
		line-height: $line-height;

		.firefox &,
		.ie & {
			max-height: $line * $line-height * 1em;
		}
	}
}

//縦書き
// $pos = default 解除
@mixin vertical($pos: "") {
	writing-mode: tb-rl;
	writing-mode: vertical-rl;
	-moz-writing-mode: vertical-rl;
	-o-writing-mode: vertical-rl;
	-webkit-writing-mode: vertical-rl;
	-webkit-text-orientation: upright;
	-moz-text-orientation: upright;
	-ms-text-orientation: upright;
	text-orientation: upright;
	text-align: left;
	display: inline-block;
	font-feature-settings: normal;

	@if $pos =="default" {
		writing-mode: lr-tb;
		writing-mode: horizontal-tb;
		-moz-writing-mode: horizontal-tb;
		-o-writing-mode: horizontal-tb;
		-webkit-writing-mode: horizontal-tb;
		-webkit-text-orientation: inherit;
		-moz-text-orientation: inherit;
		-ms-text-orientation: inherit;
		text-orientation: inherit;
	}
}